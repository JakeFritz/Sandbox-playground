name: Workflow A

on:
  push:

jobs:
  Job_A_1:
    runs-on: ubuntu-latest
    steps:
      - name: Create one file
        run: |
          echo "Job is named: Job A 1" > workflow_a.txt
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: workflow_a
          path: workflow_a.txt
        
  Job_A_2:
    runs-on: ubuntu-latest
    steps:
      - name: Create another file
        run: |
          echo "Job is named: Job A 2" > workflow_b.txt
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: workflow_b
          path: workflow_b.txt

  Job_Wait_for_other_workflow:
    runs-on: ubuntu-latest
    steps:
      # - name: Get other Workflow_ID
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          run_id: second_workflow.yml,
      #       });
      #       let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
      #         return artifact.name == "workflow_a"
      #       })[0];
      #       let download = await github.rest.actions.downloadArtifact({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          artifact_id: matchArtifact.id,
      #          archive_format: 'zip',
      #       });
      #       let fs = require('fs');
      #       fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));
      # - name: Download artifacts from other workflow
      #   uses: actions/download-artifact
      #   with:
      #     merge-multiple: true
      #     run-id: ${{ RUN_ID_SECONDWF }}
      - name: Set env-var
        id: get_id
        uses: actions/github-script@v7
        with:
          script: |
            console.log(github)
            console.log(context.github);
            const result = await github.request('GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'second_workflow.yml',
              headers: {
                'X-GitHub-Api-Version': '2022-11-28',
                'accept': 'application/vnd.github+json'
              },
              head_sha: context.github.sha,
            })
            console.log(context.github.sha);
            console.log(result.data.total_count);
            console.log(result.data.workflow_runs[0]);
            if (result.data.total_count == 1) {
              return result.data.workflow_runs[0].id
            } else {
              for (var i = 0; i < result.data.workflow_runs.length; i++) {
                console.log(result.data.workflow_runs[i].id);
              }
              return result.data.workflow_runs[i].id
            }
      - name: Test vars
        env:
         Target_Run_ID: ${{ steps.get_id.outputs.result }}
        run: echo "Target run id is $Target_Run_ID"